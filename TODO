
fix code to work with everything as unicode
convert files to be string UUID/ext pairs in python (namedtuple), and urls in json (pass in base URL in to_json_dict)
validate all types for events
fix integration tests
check test coverage
make screenshot collector
    really, new file collector.
    just takes a folder where files appear, and uploads them with some particular settings (namespace, etc), possibly deleting as you go
    heh...  which is also the more general case of "file watcher", uploading only on new file (not on modification or deletion)
check test coverage specifically for unit tests
add separate tests for blobstore
make collector run on windows
deployment scripts
    continuous deployment and continuous integration:
        if we START this way and just keep it like this, it will be a lot easier
        also do this for updates to client software
        probably use circleci
            and eventually send an email thanking that guy :)
    ssl: http://flask.pocoo.org/snippets/111/
    setup dns for joshalbrecht.chronographr.com
    remember to fix logging in wsgi context:
        can use this if necessary: flask.current_app.logger.info('grolsh')
        also remember that memdam.common.parallel may not work in that context... (should test and at least warn)

future (cleanup)
    pylint fixes
    update docs everywhere
    search for and minimize TODOs:
        only use TODOs for functionality that is incomplete, and in those cases, just raise NotImplementedError in most cases instead
        for features, put them here instead
        for cleanup and testing and docs, generally do it immediately, otherwise put it here
    add auto trace logging (AOP)
    make things configurable that should be configurable


future (collectors)
finish gmail import
store in local blob and event store first (much faster), and have a separate process that synchs from one to the other, then deletes from the original

future (when I have something I want to query for)
query sqlite tests
query web tests
query client integration tests

future (deployment)
encrypt blobs and store in S3 with a policy to archive to glacier (nice and cheap, recent data is accessible, distant data can still be accessed but is more costly)
    benefit is that MUCH less needs to be stored on the server drive (only the actual event data, which is MUCH smaller)
