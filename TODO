blobs resource unit tests
    waiting on internet to figure out how to upload a file to flask
fix memdam.log
    either look at how it works for flask
    or call start logging thingy
    especially important to replace the call in urls (error handling)  ing)

fix blob part of integration test
pass some arg like "in memory db" to server during integration tests
get client integration tests working again
store files purely as blob id (no weird url nonsense, that way it never needs to be mangled and they are always nice and comparable)
finish removal of SMTP and queuing complexity from client
fix server integration and unit tests
check test coverage
make screenshot collector
make collector run on windows
deployment scripts


#TODO: unit tests of each
#TODO: integration tests of server
#TODO: refactor auth stuff
#TODO: client
#TODO: unit tests of client
#TODO: integration tests of client and server
#TODO: use rest client instead of email
#TODO: ssl: http://flask.pocoo.org/snippets/111/
#TODO: deployment (joshalbrecht.chronographr.com)

future (collectors)
finish gmail import
store in local blob and event store first (much faster), and have a separate process that synchs from one to the other, then deletes from the original

future (when I have something I want to query for)
query sqlite tests
query web tests
query client integration tests

future (deployment)
encrypt blobs and store in S3 with a policy to archive to glacier (nice and cheap, recent data is accessible, distant data can still be accessed but is more costly)
    benefit is that MUCH less needs to be stored on the server drive (only the actual event data, which is MUCH smaller)
